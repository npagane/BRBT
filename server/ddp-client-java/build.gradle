/*
 * Copyright (C) 2014. Geoffrey Chandler.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

subprojects {
    apply plugin: 'java'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
    }
    dependencies {
        compile "org.slf4j:slf4j-api:[1.7,1.8)"
    }
}

project(':ddp-client') {

    apply plugin: 'maven'
    apply plugin: 'signing'

    group = 'io.advantageous.ddp'
    version = '1.0.0'

    dependencies {
        testCompile "junit:junit:4.11"
        testCompile 'org.mockito:mockito-all:1.9.5'
        compile 'javax.inject:javax.inject:1'
        compile 'javax.websocket:javax.websocket-api:1.0'
        compile 'com.google.code.gson:gson:2.2.4'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required false
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    try {
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    } catch (MissingPropertyException ignore) {
                    }
                }

                pom.project {
                    name 'DDP Client for Java'
                    packaging 'jar'
                    description 'This is a Java client for the DDP protocol for Meteor.'
                    url 'http://sailorgeoffrey.github.io/ddp-client-java/'

                    scm {
                        url 'scm:git@github.com:sailorgeoffrey/ddp-client-java.git'
                        connection 'scm:git@github.com:sailorgeoffrey/ddp-client-java.git'
                        developerConnection 'scm:git@github.com:sailorgeoffrey/ddp-client-java.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'sailorgeoffrey'
                            name 'Geoffrey Chandler'
                        }
                    }
                }
            }
        }
    }
}


project(':java_applications:world-subscription') {
    jar {
        manifest {
           attributes 'Main-Class': 'io.advantageous.ddp.world.WorldSubscription'
        }
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    dependencies {
        compile project(':ddp-client')
        compile 'org.glassfish.tyrus:tyrus-client:1.3.3'
        compile 'org.glassfish.tyrus:tyrus-server:1.3.3'
        compile 'org.glassfish.tyrus:tyrus-container-grizzly:1.2.1'
        compile "org.slf4j:slf4j-simple:[1.7,1.8)"
    }
}
